/*****************************************************************************
 *																			 *
 *								Protocol File								 *
 *																			 *
 *		File	: DB_UIText.cs
 *																			 *
 *		Desc	: Generated by Morpheus										 *
 *																			 *
 *****************************************************************************/
//-----------------------------------------------------------------------------
//	Include Files & Define
//-----------------------------------------------------------------------------
using System.Collections.Generic;


namespace table.db {

//-----------------------------------------------------------------------------
//	Packets
//-----------------------------------------------------------------------------
public class DB_UIText
{
	//-----------------------------------------------------------------------------
	//	Fields
	//-----------------------------------------------------------------------------
	private string _id = string.Empty;
	private string _text = string.Empty;

	//-----------------------------------------------------------------------------
	//	Properties
	//-----------------------------------------------------------------------------
	public string id { get{ return _id; } set{ _id = value; } }
	public string text { get{ return _text; } set{ _text = value; } }

	public DB_UIText() {}
	public DB_UIText( DB_UIText rho )
	{
		id = rho.id;
		text = rho.text;
	}

	public uint GetSize()
	{
		uint size = 0;
		size += BinaryCodec.Size(id);
		size += BinaryCodec.SizeUnicodeString(text);
		return size;
	}

	public bool Encode( BinaryEncoder encoder )
	{
		if( !BinaryCodec.Encode( encoder, _id ) ) return false;
		if( !BinaryCodec.EncodeUnicodeString( encoder, _text ) ) return false;
		return true;
	}

	public bool Decode( BinaryDecoder decoder )
	{
		if( !BinaryCodec.Decode( decoder, out _id ) ) return false;
		if( !BinaryCodec.DecodeUnicodeString( decoder, out _text ) ) return false;
		return true;
	}
}

//-----------------------------------------------------------------------------
//	Database
//-----------------------------------------------------------------------------
public class DB_UITextList : IDatabase
{
	//-----------------------------------------------------------------------------
	//	Fields
	//-----------------------------------------------------------------------------
	private List< DB_UIText > _items = new List< DB_UIText >();

	//-----------------------------------------------------------------------------
	//	Properties
	//-----------------------------------------------------------------------------
	public List< DB_UIText > items { get{ return _items; } set{ _items = value; } }

	public uint GetSize()
	{
		uint size = 0;
		size += sizeof(ushort);
		for(int i = 0; i < items.Count; ++i )
		{
			DB_UIText item = items[i];
			size += item.GetSize();
		}
		return size;
	}

	public bool Encode( BinaryEncoder encoder )
	{
		{
			ushort _size = (ushort)items.Count;
			if( !BinaryCodec.Encode( encoder, _size ) ) return false;
			for(int i = 0; i < items.Count; ++i)
			{
				DB_UIText item = items[i];
				if( !item.Encode( encoder ) ) return false;
			}
		}
		return true;
	}

	public bool Decode( BinaryDecoder decoder )
	{
		{
			ushort _size = 0;
			if( !BinaryCodec.Decode( decoder, out _size ) ) return false;
			items.Capacity = _size; 
			for( int i = 0; i < _size; ++i )
			{
				DB_UIText item = new DB_UIText();
				if( !item.Decode( decoder ) ) return false;
				items.Add( item );
			}
		}
		return true;
	}
}

}; // namespace table.db
/* EOF */
